Terminals unused in grammar

    AND
    OR


Grammar

    0 $accept: program $end

    1 program: primyexp

    2 primyexp: %empty
    3         | exp

    4 exp: lvalue
    5    | NIL
    6    | INT
    7    | STRING
    8    | MINUS exp
    9    | func_call
   10    | arith_exp
   11    | cmp_exp
   12    | record_create
   13    | array_create
   14    | lvalue ASSIGN exp
   15    | IF exp THEN exp ELSE exp
   16    | IF exp THEN exp
   17    | WHILE exp DO exp
   18    | FOR ID ASSIGN exp TO exp DO exp
   19    | BREAK
   20    | LET decs IN expseq END
   21    | LPAREN expseq RPAREN

   22 lvalue: ID
   23       | ID LBRACK exp RBRACK
   24       | lvalue LBRACK exp RBRACK
   25       | lvalue DOT ID

   26 func_call: ID LPAREN explist RPAREN

   27 explist: %empty
   28        | explist_nonempty

   29 explist_nonempty: exp
   30                 | exp COMMA explist_nonempty

   31 arith_exp: exp PLUS exp
   32          | exp MINUS exp
   33          | exp TIMES exp
   34          | exp DIVIDE exp

   35 cmp_exp: exp EQ exp
   36        | exp NEQ exp
   37        | exp LT exp
   38        | exp LE exp
   39        | exp GT exp
   40        | exp GE exp

   41 record_create: ID LBRACE record_create_list RBRACE

   42 record_create_list: %empty
   43                   | record_create_list_nonempty

   44 record_create_list_nonempty: record_create_field
   45                            | record_create_field COMMA record_create_list_nonempty

   46 record_create_field: ID EQ exp

   47 array_create: ID LBRACK exp RBRACK OF exp

   48 decs: %empty
   49     | dec decs

   50 dec: tydeclist
   51    | vardec
   52    | fundeclist

   53 tydeclist: tydec
   54          | tydec tydeclist

   55 tydec: TYPE ID EQ ty

   56 ty: ID
   57   | LBRACE typefields RBRACE
   58   | ARRAY OF ID

   59 typefields: %empty
   60           | typefields_nonempty

   61 typefields_nonempty: typefield
   62                    | typefield COMMA typefields_nonempty

   63 typefield: ID COLON ID

   64 vardec: VAR ID ASSIGN exp
   65       | VAR ID COLON ID ASSIGN exp

   66 fundeclist: fundec
   67           | fundec fundeclist

   68 fundec: FUNCTION ID LPAREN typefields RPAREN EQ exp
   69       | FUNCTION ID LPAREN typefields RPAREN COLON ID EQ exp

   70 expseq: %empty
   71       | exp
   72       | exp SEMICOLON expseq


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    STRING <sval> (258) 7
    ID <sval> (259) 18 22 23 25 26 41 46 47 55 56 58 63 64 65 68 69
    INT <ival> (260) 6
    COMMA (261) 30 45 62
    COLON (262) 63 65 69
    SEMICOLON (263) 72
    LPAREN (264) 21 26 68 69
    RPAREN (265) 21 26 68 69
    LBRACK (266) 23 24 47
    RBRACK (267) 23 24 47
    LBRACE (268) 41 57
    RBRACE (269) 41 57
    DOT (270) 25
    EQ (271) 35 46 55 68 69
    PLUS (272) 31
    MINUS (273) 8 32
    TIMES (274) 33
    DIVIDE (275) 34
    NEQ (276) 36
    LT (277) 37
    LE (278) 38
    GT (279) 39
    GE (280) 40
    AND (281)
    OR (282)
    ASSIGN (283) 14 18 64 65
    ARRAY (284) 58
    BREAK (285) 19
    DO (286) 17 18
    FOR (287) 18
    TO (288) 18
    WHILE (289) 17
    IF (290) 15 16
    THEN (291) 15 16
    ELSE (292) 15
    LET (293) 20
    IN (294) 20
    END (295) 20
    OF (296) 47 58
    NIL (297) 5
    FUNCTION (298) 68 69
    VAR (299) 64 65
    TYPE (300) 55
    LOW (301)
    UMINUS (302)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1
        on right: 0
    primyexp <exp> (50)
        on left: 2 3
        on right: 1
    exp <exp> (51)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
        on right: 3 8 14 15 16 17 18 23 24 29 30 31 32 33 34 35 36 37 38 39 40 46 47 64 65 68 69 71 72
    lvalue <var> (52)
        on left: 22 23 24 25
        on right: 4 14 24 25
    func_call <exp> (53)
        on left: 26
        on right: 9
    explist <explist> (54)
        on left: 27 28
        on right: 26
    explist_nonempty <explist> (55)
        on left: 29 30
        on right: 28 30
    arith_exp <exp> (56)
        on left: 31 32 33 34
        on right: 10
    cmp_exp <exp> (57)
        on left: 35 36 37 38 39 40
        on right: 11
    record_create <exp> (58)
        on left: 41
        on right: 12
    record_create_list <efieldlist> (59)
        on left: 42 43
        on right: 41
    record_create_list_nonempty <efieldlist> (60)
        on left: 44 45
        on right: 43 45
    record_create_field <efield> (61)
        on left: 46
        on right: 44 45
    array_create <exp> (62)
        on left: 47
        on right: 13
    decs <declist> (63)
        on left: 48 49
        on right: 20 49
    dec <dec> (64)
        on left: 50 51 52
        on right: 49
    tydeclist <dec> (65)
        on left: 53 54
        on right: 50 54
    tydec <namety> (66)
        on left: 55
        on right: 53 54
    ty <ty> (67)
        on left: 56 57 58
        on right: 55
    typefields <fieldlist> (68)
        on left: 59 60
        on right: 57 68 69
    typefields_nonempty <fieldlist> (69)
        on left: 61 62
        on right: 60 62
    typefield <field> (70)
        on left: 63
        on right: 61 62
    vardec <dec> (71)
        on left: 64 65
        on right: 51
    fundeclist <dec> (72)
        on left: 66 67
        on right: 52 67
    fundec <fundec> (73)
        on left: 68 69
        on right: 66 67
    expseq <explist> (74)
        on left: 70 71 72
        on right: 20 21 72


State 0

    0 $accept: . program $end

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 2 (primyexp)

    program        go to state 12
    primyexp       go to state 13
    exp            go to state 14
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 1

    7 exp: STRING .

    $default  reduce using rule 7 (exp)


State 2

   22 lvalue: ID .
   23       | ID . LBRACK exp RBRACK
   26 func_call: ID . LPAREN explist RPAREN
   41 record_create: ID . LBRACE record_create_list RBRACE
   47 array_create: ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 21
    LBRACK  shift, and go to state 22
    LBRACE  shift, and go to state 23

    $default  reduce using rule 22 (lvalue)


State 3

    6 exp: INT .

    $default  reduce using rule 6 (exp)


State 4

   21 exp: LPAREN . expseq RPAREN

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 70 (expseq)

    exp            go to state 24
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20
    expseq         go to state 25


State 5

    8 exp: MINUS . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 26
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 6

   19 exp: BREAK .

    $default  reduce using rule 19 (exp)


State 7

   18 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 27


State 8

   17 exp: WHILE . exp DO exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 28
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 9

   15 exp: IF . exp THEN exp ELSE exp
   16    | IF . exp THEN exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 29
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 10

   20 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 30
    VAR       shift, and go to state 31
    TYPE      shift, and go to state 32

    $default  reduce using rule 48 (decs)

    decs        go to state 33
    dec         go to state 34
    tydeclist   go to state 35
    tydec       go to state 36
    vardec      go to state 37
    fundeclist  go to state 38
    fundec      go to state 39


State 11

    5 exp: NIL .

    $default  reduce using rule 5 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 40


State 13

    1 program: primyexp .

    $default  reduce using rule 1 (program)


State 14

    3 primyexp: exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 3 (primyexp)


State 15

    4 exp: lvalue .
   14    | lvalue . ASSIGN exp
   24 lvalue: lvalue . LBRACK exp RBRACK
   25       | lvalue . DOT ID

    LBRACK  shift, and go to state 51
    DOT     shift, and go to state 52
    ASSIGN  shift, and go to state 53

    $default  reduce using rule 4 (exp)


State 16

    9 exp: func_call .

    $default  reduce using rule 9 (exp)


State 17

   10 exp: arith_exp .

    $default  reduce using rule 10 (exp)


State 18

   11 exp: cmp_exp .

    $default  reduce using rule 11 (exp)


State 19

   12 exp: record_create .

    $default  reduce using rule 12 (exp)


State 20

   13 exp: array_create .

    $default  reduce using rule 13 (exp)


State 21

   26 func_call: ID LPAREN . explist RPAREN

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 27 (explist)

    exp               go to state 54
    lvalue            go to state 15
    func_call         go to state 16
    explist           go to state 55
    explist_nonempty  go to state 56
    arith_exp         go to state 17
    cmp_exp           go to state 18
    record_create     go to state 19
    array_create      go to state 20


State 22

   23 lvalue: ID LBRACK . exp RBRACK
   47 array_create: ID LBRACK . exp RBRACK OF exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 57
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 23

   41 record_create: ID LBRACE . record_create_list RBRACE

    ID  shift, and go to state 58

    $default  reduce using rule 42 (record_create_list)

    record_create_list           go to state 59
    record_create_list_nonempty  go to state 60
    record_create_field          go to state 61


State 24

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp
   71 expseq: exp .
   72       | exp . SEMICOLON expseq

    SEMICOLON  shift, and go to state 62
    EQ         shift, and go to state 41
    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    NEQ        shift, and go to state 46
    LT         shift, and go to state 47
    LE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50

    $default  reduce using rule 71 (expseq)


State 25

   21 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 63


State 26

    8 exp: MINUS exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    $default  reduce using rule 8 (exp)


State 27

   18 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 64


State 28

   17 exp: WHILE exp . DO exp
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    DO      shift, and go to state 65


State 29

   15 exp: IF exp . THEN exp ELSE exp
   16    | IF exp . THEN exp
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    THEN    shift, and go to state 66


State 30

   68 fundec: FUNCTION . ID LPAREN typefields RPAREN EQ exp
   69       | FUNCTION . ID LPAREN typefields RPAREN COLON ID EQ exp

    ID  shift, and go to state 67


State 31

   64 vardec: VAR . ID ASSIGN exp
   65       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 68


State 32

   55 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 69


State 33

   20 exp: LET decs . IN expseq END

    IN  shift, and go to state 70


State 34

   49 decs: dec . decs

    FUNCTION  shift, and go to state 30
    VAR       shift, and go to state 31
    TYPE      shift, and go to state 32

    $default  reduce using rule 48 (decs)

    decs        go to state 71
    dec         go to state 34
    tydeclist   go to state 35
    tydec       go to state 36
    vardec      go to state 37
    fundeclist  go to state 38
    fundec      go to state 39


State 35

   50 dec: tydeclist .

    $default  reduce using rule 50 (dec)


State 36

   53 tydeclist: tydec .
   54          | tydec . tydeclist

    TYPE  shift, and go to state 32

    $default  reduce using rule 53 (tydeclist)

    tydeclist  go to state 72
    tydec      go to state 36


State 37

   51 dec: vardec .

    $default  reduce using rule 51 (dec)


State 38

   52 dec: fundeclist .

    $default  reduce using rule 52 (dec)


State 39

   66 fundeclist: fundec .
   67           | fundec . fundeclist

    FUNCTION  shift, and go to state 30

    $default  reduce using rule 66 (fundeclist)

    fundeclist  go to state 73
    fundec      go to state 39


State 40

    0 $accept: program $end .

    $default  accept


State 41

   35 cmp_exp: exp EQ . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 74
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 42

   31 arith_exp: exp PLUS . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 75
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 43

   32 arith_exp: exp MINUS . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 76
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 44

   33 arith_exp: exp TIMES . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 77
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 45

   34 arith_exp: exp DIVIDE . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 78
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 46

   36 cmp_exp: exp NEQ . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 79
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 47

   37 cmp_exp: exp LT . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 80
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 48

   38 cmp_exp: exp LE . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 81
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 49

   39 cmp_exp: exp GT . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 82
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 50

   40 cmp_exp: exp GE . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 83
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 51

   24 lvalue: lvalue LBRACK . exp RBRACK

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 84
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 52

   25 lvalue: lvalue DOT . ID

    ID  shift, and go to state 85


State 53

   14 exp: lvalue ASSIGN . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 86
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 54

   29 explist_nonempty: exp .
   30                 | exp . COMMA explist_nonempty
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    COMMA   shift, and go to state 87
    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 29 (explist_nonempty)


State 55

   26 func_call: ID LPAREN explist . RPAREN

    RPAREN  shift, and go to state 88


State 56

   28 explist: explist_nonempty .

    $default  reduce using rule 28 (explist)


State 57

   23 lvalue: ID LBRACK exp . RBRACK
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp
   47 array_create: ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 89
    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50


State 58

   46 record_create_field: ID . EQ exp

    EQ  shift, and go to state 90


State 59

   41 record_create: ID LBRACE record_create_list . RBRACE

    RBRACE  shift, and go to state 91


State 60

   43 record_create_list: record_create_list_nonempty .

    $default  reduce using rule 43 (record_create_list)


State 61

   44 record_create_list_nonempty: record_create_field .
   45                            | record_create_field . COMMA record_create_list_nonempty

    COMMA  shift, and go to state 92

    $default  reduce using rule 44 (record_create_list_nonempty)


State 62

   72 expseq: exp SEMICOLON . expseq

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 70 (expseq)

    exp            go to state 24
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20
    expseq         go to state 93


State 63

   21 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 21 (exp)


State 64

   18 exp: FOR ID ASSIGN . exp TO exp DO exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 94
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 65

   17 exp: WHILE exp DO . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 95
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 66

   15 exp: IF exp THEN . exp ELSE exp
   16    | IF exp THEN . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 96
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 67

   68 fundec: FUNCTION ID . LPAREN typefields RPAREN EQ exp
   69       | FUNCTION ID . LPAREN typefields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 97


State 68

   64 vardec: VAR ID . ASSIGN exp
   65       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 98
    ASSIGN  shift, and go to state 99


State 69

   55 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 100


State 70

   20 exp: LET decs IN . expseq END

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 70 (expseq)

    exp            go to state 24
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20
    expseq         go to state 101


State 71

   49 decs: dec decs .

    $default  reduce using rule 49 (decs)


State 72

   54 tydeclist: tydec tydeclist .

    $default  reduce using rule 54 (tydeclist)


State 73

   67 fundeclist: fundec fundeclist .

    $default  reduce using rule 67 (fundeclist)


State 74

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   35        | exp EQ exp .
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 35 (cmp_exp)


State 75

   31 arith_exp: exp . PLUS exp
   31          | exp PLUS exp .
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    $default  reduce using rule 31 (arith_exp)


State 76

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   32          | exp MINUS exp .
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    $default  reduce using rule 32 (arith_exp)


State 77

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   33          | exp TIMES exp .
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    $default  reduce using rule 33 (arith_exp)


State 78

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   34          | exp DIVIDE exp .
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    $default  reduce using rule 34 (arith_exp)


State 79

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   36        | exp NEQ exp .
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 36 (cmp_exp)


State 80

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   37        | exp LT exp .
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 37 (cmp_exp)


State 81

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   38        | exp LE exp .
   39        | exp . GT exp
   40        | exp . GE exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 38 (cmp_exp)


State 82

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   39        | exp GT exp .
   40        | exp . GE exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 39 (cmp_exp)


State 83

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp
   40        | exp GE exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 40 (cmp_exp)


State 84

   24 lvalue: lvalue LBRACK exp . RBRACK
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    RBRACK  shift, and go to state 102
    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50


State 85

   25 lvalue: lvalue DOT ID .

    $default  reduce using rule 25 (lvalue)


State 86

   14 exp: lvalue ASSIGN exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 14 (exp)


State 87

   30 explist_nonempty: exp COMMA . explist_nonempty

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp               go to state 54
    lvalue            go to state 15
    func_call         go to state 16
    explist_nonempty  go to state 103
    arith_exp         go to state 17
    cmp_exp           go to state 18
    record_create     go to state 19
    array_create      go to state 20


State 88

   26 func_call: ID LPAREN explist RPAREN .

    $default  reduce using rule 26 (func_call)


State 89

   23 lvalue: ID LBRACK exp RBRACK .
   47 array_create: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 104

    $default  reduce using rule 23 (lvalue)


State 90

   46 record_create_field: ID EQ . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 105
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 91

   41 record_create: ID LBRACE record_create_list RBRACE .

    $default  reduce using rule 41 (record_create)


State 92

   45 record_create_list_nonempty: record_create_field COMMA . record_create_list_nonempty

    ID  shift, and go to state 58

    record_create_list_nonempty  go to state 106
    record_create_field          go to state 61


State 93

   72 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 72 (expseq)


State 94

   18 exp: FOR ID ASSIGN exp . TO exp DO exp
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    TO      shift, and go to state 107


State 95

   17 exp: WHILE exp DO exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 17 (exp)


State 96

   15 exp: IF exp THEN exp . ELSE exp
   16    | IF exp THEN exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    ELSE    shift, and go to state 108

    $default  reduce using rule 16 (exp)


State 97

   68 fundec: FUNCTION ID LPAREN . typefields RPAREN EQ exp
   69       | FUNCTION ID LPAREN . typefields RPAREN COLON ID EQ exp

    ID  shift, and go to state 109

    $default  reduce using rule 59 (typefields)

    typefields           go to state 110
    typefields_nonempty  go to state 111
    typefield            go to state 112


State 98

   65 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 113


State 99

   64 vardec: VAR ID ASSIGN . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 114
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 100

   55 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 115
    LBRACE  shift, and go to state 116
    ARRAY   shift, and go to state 117

    ty  go to state 118


State 101

   20 exp: LET decs IN expseq . END

    END  shift, and go to state 119


State 102

   24 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 24 (lvalue)


State 103

   30 explist_nonempty: exp COMMA explist_nonempty .

    $default  reduce using rule 30 (explist_nonempty)


State 104

   47 array_create: ID LBRACK exp RBRACK OF . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 120
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 105

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp
   46 record_create_field: ID EQ exp .

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 46 (record_create_field)


State 106

   45 record_create_list_nonempty: record_create_field COMMA record_create_list_nonempty .

    $default  reduce using rule 45 (record_create_list_nonempty)


State 107

   18 exp: FOR ID ASSIGN exp TO . exp DO exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 121
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 108

   15 exp: IF exp THEN exp ELSE . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 122
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 109

   63 typefield: ID . COLON ID

    COLON  shift, and go to state 123


State 110

   68 fundec: FUNCTION ID LPAREN typefields . RPAREN EQ exp
   69       | FUNCTION ID LPAREN typefields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 124


State 111

   60 typefields: typefields_nonempty .

    $default  reduce using rule 60 (typefields)


State 112

   61 typefields_nonempty: typefield .
   62                    | typefield . COMMA typefields_nonempty

    COMMA  shift, and go to state 125

    $default  reduce using rule 61 (typefields_nonempty)


State 113

   65 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 126


State 114

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp
   64 vardec: VAR ID ASSIGN exp .

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 64 (vardec)


State 115

   56 ty: ID .

    $default  reduce using rule 56 (ty)


State 116

   57 ty: LBRACE . typefields RBRACE

    ID  shift, and go to state 109

    $default  reduce using rule 59 (typefields)

    typefields           go to state 127
    typefields_nonempty  go to state 111
    typefield            go to state 112


State 117

   58 ty: ARRAY . OF ID

    OF  shift, and go to state 128


State 118

   55 tydec: TYPE ID EQ ty .

    $default  reduce using rule 55 (tydec)


State 119

   20 exp: LET decs IN expseq END .

    $default  reduce using rule 20 (exp)


State 120

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp
   47 array_create: ID LBRACK exp RBRACK OF exp .

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 47 (array_create)


State 121

   18 exp: FOR ID ASSIGN exp TO exp . DO exp
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    DO      shift, and go to state 129


State 122

   15 exp: IF exp THEN exp ELSE exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 15 (exp)


State 123

   63 typefield: ID COLON . ID

    ID  shift, and go to state 130


State 124

   68 fundec: FUNCTION ID LPAREN typefields RPAREN . EQ exp
   69       | FUNCTION ID LPAREN typefields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 131
    EQ     shift, and go to state 132


State 125

   62 typefields_nonempty: typefield COMMA . typefields_nonempty

    ID  shift, and go to state 109

    typefields_nonempty  go to state 133
    typefield            go to state 112


State 126

   65 vardec: VAR ID COLON ID ASSIGN . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 134
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 127

   57 ty: LBRACE typefields . RBRACE

    RBRACE  shift, and go to state 135


State 128

   58 ty: ARRAY OF . ID

    ID  shift, and go to state 136


State 129

   18 exp: FOR ID ASSIGN exp TO exp DO . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 137
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 130

   63 typefield: ID COLON ID .

    $default  reduce using rule 63 (typefield)


State 131

   69 fundec: FUNCTION ID LPAREN typefields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 138


State 132

   68 fundec: FUNCTION ID LPAREN typefields RPAREN EQ . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 139
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 133

   62 typefields_nonempty: typefield COMMA typefields_nonempty .

    $default  reduce using rule 62 (typefields_nonempty)


State 134

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp
   65 vardec: VAR ID COLON ID ASSIGN exp .

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 65 (vardec)


State 135

   57 ty: LBRACE typefields RBRACE .

    $default  reduce using rule 57 (ty)


State 136

   58 ty: ARRAY OF ID .

    $default  reduce using rule 58 (ty)


State 137

   18 exp: FOR ID ASSIGN exp TO exp DO exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 18 (exp)


State 138

   69 fundec: FUNCTION ID LPAREN typefields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 140


State 139

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp
   68 fundec: FUNCTION ID LPAREN typefields RPAREN EQ exp .

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 68 (fundec)


State 140

   69 fundec: FUNCTION ID LPAREN typefields RPAREN COLON ID EQ . exp

    STRING  shift, and go to state 1
    ID      shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    BREAK   shift, and go to state 6
    FOR     shift, and go to state 7
    WHILE   shift, and go to state 8
    IF      shift, and go to state 9
    LET     shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 141
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    record_create  go to state 19
    array_create   go to state 20


State 141

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 cmp_exp: exp . EQ exp
   36        | exp . NEQ exp
   37        | exp . LT exp
   38        | exp . LE exp
   39        | exp . GT exp
   40        | exp . GE exp
   69 fundec: FUNCTION ID LPAREN typefields RPAREN COLON ID EQ exp .

    EQ      shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 69 (fundec)
